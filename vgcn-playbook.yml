- name: VGCN Configuration Playbook
  hosts: all
  become: true
  vars_files:
    - mounts/dest/all.yml
    - mounts/mountpoints.yml
  vars:
    internal: true
  handlers:
    - name: Restart Telegraf
      ansible.builtin.service:
        name: telegraf
        state: restarted
    - name: Restart HTCondor
      ansible.builtin.service:
        name: condor
        state: restarted
  pre_tasks:
    - name: Update Telegraf hostname
      ansible.builtin.lineinfile:
        path: "{{ telegraf_agent_config_path }}/telegraf.conf"
        search_string: '    hostname = "localhost.localdomain"'
        line: '    hostname = "{{ ansible_fqdn }}"'
      notify: Restart Telegraf
    - name: Copy Telegraf credentials
      ansible.builtin.template:
        src: output.conf.j2
        dest: "{{ telegraf_agent_config_path }}/telegraf.d/output.conf"
        mode: "0640"
        owner: telegraf
        group: telegraf
      no_log: true
      notify: Restart Telegraf
    - name: Deploy SLX disk monitor script
      ansible.builtin.copy:
        src: check_slx_disks.sh
        dest: "{{ check_slx_disks_path }}"
        owner: root
        group: root
        mode: 0755
      notify: Restart Telegraf
    - name: "Copy telegraf extra plugins"
      template:
        src: "telegraf-extra-plugin.conf.j2"
        dest: "{{ telegraf_agent_config_path }}/telegraf.d/{{ item.key }}.conf"
        owner: telegraf
        group: telegraf
        mode: 0640
      with_dict: "{{ telegraf_plugins_extra }}"
      loop_control:
        label: "{{ item.key }}"
      when:
        - telegraf_plugins_extra is defined
        - telegraf_plugins_extra is iterable
        - item.value.state|default('present') != 'absent'
      notify:
        - Restart Telegraf
    - name: Fail if disks are misconfigured
      ansible.builtin.shell:
        cmd: "{{ check_slx_disks_path }} | cut -d ' ' -f2"
      register: disk_setup
    - ansible.builtin.fail:
        msg: >
          Disks are misconfigured:
          "{{ disk_setup.stdout }}"
      when: '"0" in disk_setup.stdout or (disk_setup.stderr | length > 0)'
    - name: Ensure the HTCondor configuration directory exists.
      ansible.builtin.file:
        path: /etc/condor
        state: directory
        owner: root
        group: root
        mode: "0755"
  post_tasks:
    - name: Template HTCondor local configuration.
      ansible.builtin.template:
        src: condor_config.local.j2
        dest: /etc/condor/condor_config.local
        owner: root
        group: root
        mode: "0644"
      notify: Restart HTCondor
    - name: Template HTCondor host specific configuration.
      ansible.builtin.template:
        src: 99-cloud-init.conf.j2
        dest: /etc/condor/config.d/99-cloud-init.conf
        owner: root
        group: root
        mode: "0644"
      notify: Restart HTCondor
  tasks:
    - name: Restrict Docker network access for ITs
      ansible.builtin.include_tasks:
        file: tasks/restrict_docker.yml
      when: "'interactive' in group_names"

  roles:
    - usegalaxy_eu.firewall
    - grycap.htcondor
    - usegalaxy-eu.autofs
